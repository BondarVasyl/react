{"ast":null,"code":"import './Waves.css';\nexport default {\n  props: {\n    waves: {\n      type: Boolean,\n      default: true\n    },\n    darkWaves: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    wave: function wave(e) {\n      if (this.waves) {\n        this.target = e.target.classList.contains('ripple-parent') ? e.currentTarget : e.target.parentElement;\n        this.getOffsets(e);\n        this.waveData = {\n          'top': e.pageY - this.offsetTop,\n          'left': e.pageX - this.offsetLeft,\n          'height': this.$el.offsetHeight,\n          'width': this.$el.offsetWidth\n        }; // for fixed elements\n\n        if (this.wavesFixed) {\n          this.waveData.top = e.clientY - this.offsetTop;\n        }\n\n        this.createRipple();\n        this.rippleAnimate();\n        this.rippleRemove(this.target, this.rippleElement);\n      }\n    },\n    getOffsets: function getOffsets(e) {\n      if (this.target.offsetParent) {\n        this.offsetLeft = this.target.offsetLeft;\n        this.offsetTop = this.target.offsetTop;\n        this.parentOffset = this.target.offsetParent;\n\n        while (this.parentOffset) {\n          this.offsetLeft += this.parentOffset.offsetLeft;\n          this.offsetTop += this.parentOffset.offsetTop;\n          this.parentOffset = this.parentOffset.offsetParent;\n        }\n      }\n    },\n    createRipple: function createRipple() {\n      this.rippleElement = document.createElement('div');\n      this.rippleElement.classList.add('ripple');\n      this.rippleElement.style.top = this.waveData.top - this.waveData.width / 2 + 'px';\n      this.rippleElement.style.left = this.waveData.left - this.waveData.width / 2 + 'px';\n      this.rippleElement.style.height = this.waveData.width + 'px';\n      this.rippleElement.style.width = this.waveData.width + 'px';\n\n      if (this.darkWaves) {\n        this.rippleElement.style.background = \"rgba(0, 0, 0, 0.2)\";\n      }\n\n      this.target.appendChild(this.rippleElement);\n    },\n    rippleAnimate: function rippleAnimate() {\n      this.rippleElement.classList.add('is-reppling');\n    },\n    rippleRemove: function rippleRemove(target, rippleElement) {\n      this.remove = setTimeout(function () {\n        target.removeChild(rippleElement);\n      }, 600);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}